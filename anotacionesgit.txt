Algunos comandos que pueden ayudar cuando colaboren con proyectos muy grandes de github:

git log --oneline - Te muestra el id commit y el título del commit.
git log --decorate- Te muestra donde se encuentra el head point en el log.
git log --stat - Explica el número de líneas que se cambiaron brevemente.
git log -p- Explica el número de líneas que se cambiaron y te muestra que se cambió en el contenido.
git shortlog - Indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.
git log --graph --oneline --decorate y
git log --pretty=format:"%cn hizo un commit %h el dia %cd" - Muestra mensajes personalizados de los commits.
git log -3 - Limitamos el número de commits.
git log --after=“2018-1-2” ,
git log --after=“today” y
git log --after=“2018-1-2” --before=“today” - Commits para localizar por fechas.
git log --author=“Name Author” - Commits realizados por autor que cumplan exactamente con el nombre.
git log --grep=“INVIE” - Busca los commits que cumplan tal cual está escrito entre las comillas.
git log --grep=“INVIE” –i- Busca los commits que cumplan sin importar mayúsculas o minúsculas.
git log – index.html- Busca los commits en un archivo en específico.
git log -S “Por contenido”- Buscar los commits con el contenido dentro del archivo.
git log > log.txt - guardar los logs en un archivo txt


Mas apuntes:
**git init: **iniciar una carpeta como repo

**git add “nombre del Archivo”/ git add . ** : agregar archivos que se encuentran en el repositorio, pero no se estan trackeando. (Sin este comando git no va a trackear el archivo. Una vez que se aplica este comando los archivos entran a un estado denominado “staging”.

git rm –cached “nombre del archivo: Mueve el archivos al estado sin trackear.

git commit -m “mensaje del commit para saber de que se trata el comit”: con este comando se agregan los cambios a la rama master.

git log: muestra el historial de cambios del repositorio

git config --list: muestra la información de configuración del repo

git config --global user.name “nombre de la persona”: configura el repo local para que se sepa quien hace los cambios.

git config --global user.email “email”: configura el email del usuario

git show “nombre del archivo”: mira los cambios de un archivo entre lo que se modifica y lo que se incluye

git diff “codigo hexa decimal del commit mas viejo” “codigo hexadecimal mas reciente” Compara commit.

git diff: puede ver los cambios

git reset “codigo del commit al que queremos volver” –hard/–soft: sirve para volver a una version de commit que teniamos anterior.

git log –stat: visualizar la información de los cambios de manera especifica.

git checkout “codigo hexa del commit 1” “ nombre del archivo”: trae lo Viejo a la version actual

git checkout master “nombre del archivo”: trae el master.